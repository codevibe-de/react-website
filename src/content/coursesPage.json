{
  "title": "Kurse, Seminare, Raves :: Codevibe IT-Seminare",
  "hero": {
    "title": "Unsere Kurse",
    "subtitle": "Entdecken Sie unser umfassendes Angebot\nan Entwicklerschulungen",
    "backgroundImageUrl": "/bg/grow-room2.jpg"
  },
  "courses": [
    {
      "id": "J-01",
      "title": "Java Grundlagen",
      "description": "Eine umfassende Einführung in Java, die durch zahlreiche Übungen und ein durchgängiges Miniprojekt zum Erfolg führt. Das Seminar vermittelt alle wesentlichen Konzepte der Java-Sprache und befähigt Teilnehmende, eigenständig einfache Anwendungen zu beginnen und komplexere Anwendungen fortzuführen.",
      "goal": "Die Teilnehmenden sind mit den wesentlichen Konzepten der Java-Sprache vertraut und können eigenständig einfache Anwendungen beginnen, komplexere Anwendungen fortführen sowie Tests und Fehlerbehebungen in vorhandenem Code durchführen.",
      "targetAudience": "Anwendungsentwickler:innen, die noch wenig Berührung mit Java hatten, aber grundsätzliche Programmiererfahrungen sammeln konnten.",
      "outline": "# Kursinhalt\n\n## 1. Einführung\n- Java-Geschichte und -Architektur\n- Installation\n- Kompilierung und Ausführung\n\n## 2. Grundlagen\n- Primitive Datentypen\n- Variablen und Konstanten\n- Operatoren und Ausdrücke\n- Kontrollstrukturen (if/else, switch, Schleifen)\n\n## 3. Objektorientierte Programmierung\n- Klassen und Objekte\n- Methoden und Konstruktoren\n- Vererbung\n- Polymorphismus\n- Interfaces\n\n## 4. Erweiterte Themen\n- Fehlerbehandlung (Exceptions)\n- Collections\n- Dateiverwaltung\n- Datumsmanipulation\n- Systemklassen",
      "priceSingle": 2190,
      "priceInhouse": 7100,
      "duration": 5,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "J-02",
      "title": "Java Erweiterungen",
      "description": "Ihr nächster Schritt in die Welt der Entwicklung mit Java — vier Tage kompaktes Profi-Wissen. Mit diesem Seminar bauen Sie Ihr Java Wissen um weiterführende Konzepte aus.",
      "goal": "Verständnis und eigenständige Entwicklung von Anwendungen, die von komplexeren Konzepten der Sprache Gebrauch machen.",
      "targetAudience": "Software-Entwickler:innen mit Java-Kenntnissen. Empfohlen wird der vorherige Besuch des Seminars Java Grundlagen.",
      "outline": "# Kursinhalt\n\n## 1. Generische Datentypen\n## 2. Reflection\n## 3. Weitere Klassenarten\n## 4. Sortieren und Suchen\n## 5. Streams\n## 6. Lambdas\n## 7. Multi-Threading\n## 8. Java I/O",
      "priceSingle": 1750,
      "priceInhouse": null,
      "duration": 4,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "J-03",
      "title": "Java 8 – funktionale Programmierung",
      "description": "Mit Expertenwissen zu Lambdas und Streams schalten Sie den Entwicklungs-Turbo ein. Mit Java 8 ist Oracle ein großer Wurf gelungen. Die Version punktet in vielen Bereichen, insbesondere aber bietet sie alles, um mittels funktionaler Programmierung eleganten und leicht wartbaren Code zu schreiben.",
      "goal": "Professionelle Entwicklung von funktional orientierten Java-Anwendungen.",
      "targetAudience": "Software-Entwickler:innen mit guten Java Kenntnissen.",
      "outline": "# Kursinhalt\n\n## 1. Lambdas im Detail\n## 2. Neuerungen bzgl. Interfaces\n## 3. Funktionale Interfaces\n## 4. Erweiterung der Standardbibliothek\n## 5. Streams\n## 6. Date & Time API\n## 7. Neuerungen bzgl. Concurrency",
      "priceSingle": 1100,
      "priceInhouse": null,
      "duration": 2,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "J-04",
      "title": "Java 9-21",
      "description": "Die wichtigsten Neuerungen von Java 9 bis 21, für eine moderne Code-Base und besser wartbare Anwendungen. Entwickler:innen können neue Sprach-Features nutzen und moderne und besser wartbare Java Anwendungen entwickeln.",
      "goal": "Entwickler:innen können neue Sprach-Features nutzen und moderne und besser wartbare Java Anwendungen entwickeln.",
      "targetAudience": "Software-Entwickler:innen mit Java Kenntnissen, die sich mit Java 8 gut auskennen.",
      "outline": "# Kursinhalt\n\n## 1. Überblick\n- Neues Release-Konzept\n- Übersicht der Versionsänderungen\n\n## 2. Syntaxerweiterungen\n\n## 3. Standard-API-Erweiterungen\n- Reactive Streams\n- HTTP Client\n- ProcessHandle\n- StackWalker\n- Logging-API\n\n## 4. Updates in einzelnen Klassen\n\n## 5. Pattern Matching, Records, Sealed Classes\n- Algebraische Datentypen\n\n## 6. Weitere Neuerungen\n\n## 7. Modularisierung mit Java Platform Module System\n- Grundlagen\n- Reflection\n- jlink- und jdeps-Tools\n- Maven- und Gradle-Nutzung",
      "priceSingle": 1100,
      "priceInhouse": null,
      "duration": 2,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "J-05",
      "title": "Testgetriebene Entwicklung (TDD) mit Java",
      "description": "Eine umfassende Einführung in eine der effektivsten Methoden zur Qualitätssicherung und Code-Entwicklung. Lernen Sie Test-Driven Development zu verstehen und Java, JUnit 5 und verwandte Bibliotheken effektiv zu nutzen.",
      "goal": "Verstehen von Test-Driven Development (TDD), effektive Nutzung von Java, JUnit 5 und verwandten Bibliotheken sowie Erkennen von TDD als positiven Ansatz für die tägliche Arbeit.",
      "targetAudience": "Software-Entwickler:innen mit Java-Kenntnissen. Empfohlen wird der vorherige Besuch des Seminars Java Grundlagen.",
      "outline": "# Kursinhalt\n\n## 1. Überblick\n- TDD- und Acceptance-TDD-Konzepte\n\n## 2. Testing-Framework-Grundlagen\n\n## 3. JUnit 5 im Detail\n\n## 4. TDD-Prozess\n\n## 5. Acceptance-Driven Development Prozess\n\n## 6. Refactoring\n\n## 7. Mocking\n\n## 8. Weitere Testing-Tools",
      "priceSingle": 1100,
      "priceInhouse": null,
      "duration": 2,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "J-06",
      "title": "Design Patterns mit Java",
      "description": "Anhand von 24 Mustern erfahren Sie, wie die Flexibilität und Wartbarkeit Ihrer Anwendungen verbessert werden kann. Ein umfassendes Seminar, das bewährte Entwurfsprinzipien durch praktische Szenarien und Übungen vermittelt.",
      "goal": "Ein tiefes Verständnis für bewährte Entwurfsprinzipien entwickeln und die Code-Qualität optimieren.",
      "targetAudience": "Software-Entwickler:innen mit Java-Kenntnissen.",
      "outline": "# Kursinhalt\n\n## 1. Überblick\n\n## 2. Grundlagen objektorientierter Entwicklung und UML\n\n## 3. Erzeugungsmuster\n- Factory Method\n- Singleton\n- Multiton\n- Builder\n- Prototype\n- Abstract Factory\n\n## 4. Strukturmuster\n- Adapter\n- Bridge\n- Composite\n- Decorator\n- Facade\n- Flyweight\n- Proxy\n\n## 5. Verhaltensmuster\n- Command\n- Observer\n- Visitor\n- Interpreter\n- Iterator\n- Memento\n- Template Method\n- Strategy\n- Mediator\n- State\n- Chain of Responsibility",
      "priceSingle": 1450,
      "priceInhouse": null,
      "duration": 3,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "K-01",
      "title": "Kotlin Grundlagen",
      "description": "Das Seminar führt die Teilnehmenden durch grundlegende syntaktische Konstrukte und baut darauf erweiterte Themen auf. Es vermittelt fundamentales Wissen für die Kotlin-Entwicklung.",
      "goal": "Die Teilnehmenden sind in der Lage, Kotlin-Anwendungen von Grund auf zu entwerfen, zu entwickeln und zu warten. Durch das Erlernen von Best Practices schreiben Entwickler:innen klaren und leicht wartbaren Code.",
      "targetAudience": "Software-Entwickler:innen mit Java-Kenntnissen.",
      "outline": "# Kursinhalt\n\n## 1. Einführung und Motivation\n\n## 2. Sprachgrundlagen\n\n## 3. Objektorientierte Programmierung\n\n## 4. Funktionale Programmierung\n\n## 5. Collections & Sequences\n\n## 6. Kotlin-Style Design Patterns\n\n## 7. Sprachfeatures (Nullability, Type Checks, Preconditions)\n\n## 8. Scope Functions\n\n## 9. Standard Library & Idioms\n\n## 10. Testing & Mocking\n\n## 11. Java Interoperabilität\n\n## 12. Spring Framework Integration",
      "priceSingle": 1450,
      "priceInhouse": null,
      "duration": 3,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "S-01",
      "title": "Spring Grundlagen",
      "description": "Das Seminar führt in die grundlegenden Konzepte der leichtgewichtigen Anwendungsprogrammierung mit Spring/Spring Boot ein. Die Teilnehmenden lernen durch schrittweise Erweiterung einer einfachen Anwendung mit Spring- und Spring Boot-Konzepten.",
      "goal": "Befähigung der Teilnehmenden zum Verstehen und Entwickeln von Spring-basierten Anwendungen sowie die Fähigkeit, eigenständig online nach Lösungen zu suchen und diese in Projekten umzusetzen.",
      "targetAudience": "Software-Entwickler:innen mit Java Kenntnissen.",
      "outline": "# Kursinhalt\n\n## 1. Spring Framework Einführung\n\n## 2. Bean Container Konzepte\n\n## 3. Aspect-Oriented Programming (AOP) Grundlagen\n\n## 4. Spring Resources\n\n## 5. Spring Expression Language\n\n## 6. Annotationsbasierte Bean-Definition\n\n## 7. Spring Boot Grundlagen\n\n## 8. Autoconfiguration Interna\n\n## 9. JDBC\n\n## 10. Web-Anwendungsdeployment\n\n## 11. RESTful API Grundlagen",
      "priceSingle": 1450,
      "priceInhouse": null,
      "duration": 3,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "S-02",
      "title": "Spring Boot Kompakt",
      "description": "Lernen Sie neue Spring Framework Features kennen und vertiefen Sie Ihr Grundlagenwissen. Entwickeln Sie eine Geschäftsanwendung architektonisch sauber.",
      "goal": "Neue Spring Framework Features lernen, fundamentales Wissen vertiefen und eine Geschäftsanwendung architektonisch sauber entwerfen und entwickeln.",
      "targetAudience": "Software-Entwickler:innen mit guten Kenntnissen in Java und erster Erfahrung mit dem Spring Framework.",
      "outline": "# Kursinhalt\n\n## 1. Überblick\n\n## 2. Annotationsbasierter Context\n\n## 3. Spring Boot Grundlagen\n- Maven/Gradle Integration\n- Starter Dependencies\n- Packaging-Optionen/Deployment\n- Developer Tools\n\n## 4. Integrationstests\n- JUnit 5\n- Slicing\n- Mocking\n\n## 5. Spring Data JPA\n\n## 6. Konfiguration\n\n## 7. RESTful API Entwicklung\n\n## 8. Profile, Logging, Monitoring",
      "priceSingle": 1100,
      "priceInhouse": null,
      "duration": 2,
      "featured": true,
      "type": "Seminar"
    },
    {
      "id": "S-03",
      "title": "Spring Aufbau",
      "description": "Vertiefende Spring-Themen für die Konzeption und Entwicklung architektonisch moderner Lösungen. Der Kurs baut auf einem wachsenden Übungsprojekt auf.",
      "goal": "Teilnehmende kennen sich mit vertiefenden Spring Themen aus und können architektonisch moderne Lösungen konzipieren und entwickeln.",
      "targetAudience": "Software-Entwickler:innen mit Java und grundlegenden Spring Kenntnissen. Empfohlen wird der vorherige Besuch des Seminars Spring Grundlagen.",
      "outline": "# Kursinhalt\n\n## 1. Spring Framework Einführung\n\n## 2. Bean Container Konzepte\n\n## 3. Spring Boot Grundlagen\n\n## 4. Integrationstests\n\n## 5. Spring Data JPA\n\n## 6. RESTful API Design und Testing\n\n## 7. Profile, Logging und Monitoring\n\n## 8. Aspect-Oriented Programming (AOP)\n\n## 9. Optionale Themen\n- Integration\n- Spring Security Grundlagen",
      "priceSingle": 1450,
      "priceInhouse": null,
      "duration": 3,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "S-04",
      "title": "Spring AI Grundlagen",
      "description": "Integration von Unternehmensdaten und APIs mit modernen KI-Modellen. Lernen Sie, effiziente, transparente und wartbare KI-Funktionalitäten in Spring-Anwendungen zu implementieren.",
      "goal": "Integration von Unternehmensdaten und APIs mit modernen KI-Modellen zur Implementierung effizienter, transparenter und wartbarer KI-Funktionalitäten in Spring-Anwendungen.",
      "targetAudience": "Software-Entwickler:innen mit guten Kenntnissen in Java und Spring.",
      "outline": "# Kursinhalt\n\n## 1. Einführung in AI\n- Kerntechnologien\n- Terminologie\n\n## 2. Spring AI Einführung\n- Architektur und Ziele\n- Spring Boot Integration\n\n## 3. Modellverbindungen & API-Design\n- Unterstützung für AI-Modelle (OpenAI, Anthropic, Microsoft, etc.)\n- Typen: Chat Completion, Embeddings, Text2Image, Speech, Moderation\n\n## 4. Vector Databases & RAG\n\n## 5. Structured Outputs\n\n## 6. Tool & Function Calling\n\n## 7. Observability und Evaluation\n\n## 8. Anwendungsfälle\n- Dokumentations-Chatbot\n- Semantische Suche & Q&A\n- Sprach- und Bildgenerierung\n- Dokumenteneinspeisung und ETL",
      "priceSingle": 1100,
      "priceInhouse": 3580,
      "duration": 2,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "G-01",
      "title": "Golang Grundlagen",
      "description": "Das Seminar führt die Teilnehmenden durch die grundlegenden Konzepte von Go (Golang) und vermittelt fundiertes Wissen für die Entwicklung moderner, effizienter Anwendungen mit dieser Programmiersprache.",
      "goal": "Die Teilnehmenden sind nach Abschluss des Seminars in der Lage, Golang-basierte Anwendungen zu verstehen und selber zu entwickeln.",
      "targetAudience": "Software-Entwickler:innen mit Kenntnissen in anderen Programmiersprachen.",
      "outline": "# Kursinhalt\n\n## 1. Einführung\n- Go-Philosophie und -Geschichte\n- SDK- und Tooling-Installation\n- Erste Anwendung\n\n## 2. Grundlagen\n- Projektstruktur, Module, Packages\n- Variablen & Funktionen\n- Einfache und komplexe Datentypen\n- Pointer\n- Casting\n\n## 3. Bibliotheken\n- Standard-Bibliotheken\n- Integration von Drittanbieter-Bibliotheken\n\n## 4. Erweiterte Themen\n- Fehlerbehandlung\n- Methods\n- Interfaces\n\n## 5. Concurrency\n- Goroutines\n- Channels\n- Concurrency-Patterns",
      "priceSingle": 1750,
      "priceInhouse": null,
      "duration": 4,
      "featured": true,
      "type": "Seminar"
    },
    {
      "id": "T-01",
      "title": "Git",
      "description": "Git ist das bevorzugte Werkzeug für die Versionsverwaltung von Quellcode. Es punktet mit einem leichtgewichtigen Branching-Modell und verteilten Repositories, die eine Offline-Nutzung ermöglichen.",
      "goal": "Die Teilnehmenden verstehen die vier Schichten von Git, werden versiert im Umgang mit Branches, Tags und Remotes und lernen gängige Git-Workflows kennen.",
      "targetAudience": "Software-Entwickler:innen, die Git noch nicht umfassend genutzt haben, nur grundlegende Kommandos wie pull, commit und push kennen oder Git umfassend verstehen möchten.",
      "outline": "# Kursinhalt\n\n## 1. Überblick\n\n## 2. Erste Schritte\n\n## 3. Schicht #1 – Persistent Map\n- Objekte\n- Hashes\n\n## 4. Schicht #2 – Content Tracker\n- Index\n- Trees\n- Add, Status, Diff\n\n## 5. Schicht #3 – Revision Control System\n- Branches, Tags, Commits\n- Log, Checkout, Merge\n- Rebase, Cherry-Picking\n\n## 6. Schicht #4 – Distributed Revision Control System\n- Remotes\n- Clone, Push, Fetch, Pull\n\n## 7. Konfiguration\n\n## 8. Git Flows\n\n## 9. Clients und Server\n\n## 10. Weitere Themen",
      "priceSingle": 1100,
      "priceInhouse": null,
      "duration": 2,
      "featured": true,
      "type": "Seminar"
    },
    {
      "id": "T-100",
      "title": "Git Insights",
      "description": "Wir nehmen Sie auf eine zweistündige Reise in die Grundlagen von Git.",
      "goal": "Grundlegendes Verständnis von Git-Konzepten und -Workflows.",
      "targetAudience": "Entwickler:innen, die Git kennenlernen möchten.",
      "outline": "# Kursinhalt\n\n## 1. Git Grundlagen\n- Was ist Versionsverwaltung?\n- Git Installation und Setup\n\n## 2. Erste Schritte\n- Repository erstellen\n- Dateien hinzufügen und committen\n\n## 3. Branching Basics\n- Branches erstellen und wechseln\n- Merging verstehen",
      "priceSingle": 140,
      "priceInhouse": null,
      "duration": 2,
      "durationUnit": "Hours",
      "featured": true,
      "type": "Rave"
    },
    {
      "id": "M-01",
      "title": "Maven",
      "description": "Meistern Sie Maven für Java-Projekte. Lernen Sie transitive Abhängigkeiten, die Bindung von konfigurierten Plugins an Phasen und Multi-Modul-Builds zu verstehen und anzuwenden.",
      "goal": "Verständnis von transitiven Abhängigkeiten, Plugin-Phasen-Bindung und Multi-Modul-Builds zur effektiven Nutzung von Maven in Java-Projekten.",
      "targetAudience": "Java-Entwickler:innen.",
      "outline": "# Kursinhalt\n\n## 1. Überblick und Grundlagen\n\n## 2. Project Object Model\n\n## 3. Properties\n\n## 4. settings.xml\n\n## 5. Dependencies und Management\n\n## 6. Plugins\n\n## 7. Profile\n\n## 8. Archetypes\n\n## 9. Multi-Modul-Builds\n\n## 10. Releasing\n\n## 11. Verschiedenes",
      "priceSingle": 650,
      "priceInhouse": null,
      "duration": 1,
      "featured": false,
      "type": "Seminar"
    },
    {
      "id": "I-01",
      "title": "IntelliJ IDEA für Java Entwickler",
      "description": "Lernen Sie IntelliJ IDEA effektiv und effizient zu nutzen. Gewinnen Sie ein gesamthaftes Verständnis der IDE und verbessern Sie Ihren Entwicklungsworkflow nachhaltig.",
      "goal": "Die Teilnehmenden gewinnen ein gesamthaftes Verständnis der IDE und lernen, effektiver und effizienter mit IntelliJ IDEA zu arbeiten.",
      "targetAudience": "Software-Entwickler:innen mit Java Kenntnissen.",
      "outline": "# Kursinhalt\n\n## 1. Einführung\n\n## 2. Projekte, Module, Build-Systeme\n\n## 3. Code-Betrachtung, Navigation & Generierung\n\n## 4. Inspections, Intentions, Templates\n\n## 5. Run & Debug\n\n## 6. Testing\n\n## 7. Refactoring\n\n## 8. Git-Tools (inkl. Multi-Repo)\n\n## 9. Spring-Tools und weitere Plugins",
      "priceSingle": 1100,
      "priceInhouse": null,
      "duration": 2,
      "featured": false,
      "type": "Seminar"
    }
  ]
}
